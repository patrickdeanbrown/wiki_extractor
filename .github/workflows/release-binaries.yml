name: release-binaries-linux-windows

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu
            runner: ubuntu-latest
            arch: x86_64
            target_arch: ""
          - os: windows
            runner: windows-latest
            arch: x86_64
            target_arch: ""

    steps:
      - uses: actions/checkout@v4

      # Pin Python to avoid fresh 3.13 packaging wrinkles with PyInstaller
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install . pyinstaller

      # Build: onefile everywhere (macOS will be signed with LV entitlement)
      - name: Build (PyInstaller onefile)
        run: |
          pyinstaller -m wikibee.cli --name wikibee --onefile ${{ matrix.target_arch }}


      # ---------- Rename Linux/Windows artifacts ----------
      - name: Rename Linux artifact
        if: runner.os == 'Linux'
        run: mv dist/wikibee dist/wikibee-linux-${{ matrix.arch }}

      - name: Rename Windows artifact
        if: runner.os == 'Windows'
        run: mv dist/wikibee.exe dist/wikibee-windows-${{ matrix.arch }}.exe

      # ---------- Upload artifacts ----------
      - name: Upload Linux artifact
        if: runner.os == 'Linux'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/wikibee-linux-${{ matrix.arch }}

      - name: Upload Windows artifact
        if: runner.os == 'Windows'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/wikibee-windows-${{ matrix.arch }}.exe
