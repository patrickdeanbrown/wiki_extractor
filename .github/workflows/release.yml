name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-publish-pypi:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Hatch
        run: pip install hatch

      - name: Build package
        run: hatch build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Upload distribution files
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  build-binaries:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu
            runner: ubuntu-latest
            arch: x86_64
          - os: windows
            runner: windows-latest
            arch: x86_64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install . pyinstaller

      - name: Build (PyInstaller onefile)
        # Use package entrypoint to maintain consistent imports
        run: pyinstaller wikibee/__main__.py --name wikibee --onefile

      - name: Rename artifact
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            mv dist/wikibee dist/wikibee-linux-${{ matrix.arch }}
          elif [ "${{ runner.os }}" == "Windows" ]; then
            mv dist/wikibee.exe dist/wikibee-windows-${{ matrix.arch }}.exe
          fi
        shell: bash

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/wikibee*

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-and-publish-pypi, build-binaries]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*/*
          generate_release_notes: true
